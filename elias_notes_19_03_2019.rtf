{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww16540\viewh11600\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf0 notes and questions 19_03_2019\
\
be active and come up with questions during the lectures\
- because languange is compiled to the processor (no JVM like motor in between) theres a few things with memory you have to take care with\
\
- nil-coalescing operator is the double ?? which means that we might provide a value to a variable in case it doesn't hold one:\
var a2: String?\
print(a2 ?? "doesn't have a value")\
\
- when calling on an optional object, do it with optional chaining using one ? like ccar?.accelerate()\
- the processor requires that the object is checked before calling a method on it..\
- unconditional unwrapping with !  does the function without checking does the object exist or not like ccar!.accelerate() DO NOT USE THIS (causes potential nil value exceptions)\
\
- var ccar3: CarClass? = CarClass("Ferrari")\
- ccar3?.accelerate()\
- guard let safeCar = ccar3 else \{ print("didnt work")\}\
\
- the first ("official") initializer is called designated init and secondary init (which always has to call self.init , the main initializer) is known as conviniece init\
}